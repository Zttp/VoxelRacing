extends Node2D

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ—Ñ–∞–±—ã –º–∞—à–∏–Ω
const CAR_SCENES = {
    "bananamobile": preload("res://cars/bananamobile.tscn"),
    "tractor": preload("res://cars/tractor.tscn"),
    "sport": preload("res://cars/sport.tscn")
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—à–∏–Ω
const CAR_DATA = {
    "bananamobile": {
        "price": 1000,
        "speed": "120 –∫–º/—á",
        "grip": "–ù–∏–∑–∫–∏–π",
        "description": "–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –±–∞–Ω–∞–Ω–æ–≤–æ–º —Ç–æ–ø–ª–∏–≤–µ. –°–∫–ª–æ–Ω–µ–Ω –∫ –∑–∞–Ω–æ—Å–∞–º."
    },
    "tractor": {
        "price": 2500,
        "speed": "60 –∫–º/—á",
        "grip": "–í—ã—Å–æ–∫–∏–π",
        "description": "–ú–µ–¥–ª–µ–Ω–Ω—ã–π, –Ω–æ –ø—Ä–æ–µ–¥–µ—Ç –≤–µ–∑–¥–µ. –ü–æ—á—Ç–∏."
    },
    "sport": {
        "price": 5000,
        "speed": "220 –∫–º/—á",
        "grip": "–°—Ä–µ–¥–Ω–∏–π",
        "description": "–ë—ã—Å—Ç—Ä—ã–π, –Ω–æ —Ä–∞–∑–≤–∞–ª–∏—Ç—Å—è –æ—Ç –æ–¥–Ω–æ–≥–æ —É–¥–∞—Ä–∞."
    }
}

# –ú—É–∑—ã–∫–∞
const MUSIC_TRACKS = [
    preload("res://audio/menu_track1.ogg"),
    preload("res://audio/menu_track2.ogg"),
    preload("res://audio/menu_track3.ogg")
]

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
var current_car: String = "bananamobile"
var bananas: int = 0
var unlocked_cars: Array = ["bananamobile"]
var is_rotating_car: bool = false
var last_mouse_pos: Vector2
var current_track_index: int = 0
var ui_elements = []

func _ready():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    ui_elements = [
        $BananaCounter,
        $MenuTabs,
        $MenuTabs/Garage,
        $MenuTabs/Shop,
        $MenuTabs/Missions,
        $MenuTabs/Settings
    ]
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ü–µ–Ω—ã
    load_game()
    init_audio()
    update_banana_counter()
    spawn_car(current_car)
    setup_shop()
    setup_missions()
    
    # –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ UI
    show_ui_animated()

func _process(delta):
    if is_rotating_car:
        rotate_car_with_mouse()

# === üéµ –ê—É–¥–∏–æ ===
func init_audio():
    $MenuMusic.stream = MUSIC_TRACKS[current_track_index]
    $MenuMusic.play()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π
    var volume = AudioServer.get_bus_volume_db(AudioServer.get_bus_index("Master"))
    $MenuTabs/Settings/VolumeSlider.value = db_to_linear(volume)

func _on_MenuMusic_finished():
    # –¶–∏–∫–ª–∏—á–µ—Å–∫–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä–µ–∫–æ–≤
    current_track_index = (current_track_index + 1) % MUSIC_TRACKS.size()
    $MenuMusic.stream = MUSIC_TRACKS[current_track_index]
    $MenuMusic.play()

# === üöó –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π ===
func spawn_car(car_name: String):
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –º–∞—à–∏–Ω—É
    for child in $CarDisplay/CarSpawnPoint.get_children():
        child.queue_free()
    
    # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é
    var car_scene = CAR_SCENES[car_name]
    var car_instance = car_scene.instantiate()
    $CarDisplay/CarSpawnPoint.add_child(car_instance)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    update_car_info(car_name)

func update_car_info(car_name: String):
    var info = CAR_DATA[car_name]
    $MenuTabs/Garage/CurrentCarInfo.text = """
    {name}
    –°–∫–æ—Ä–æ—Å—Ç—å: {speed}
    –°—Ü–µ–ø–ª–µ–Ω–∏–µ: {grip}
    –û–ø–∏—Å–∞–Ω–∏–µ: {desc}
    """.format({
        "name": car_name.capitalize(),
        "speed": info["speed"],
        "grip": info["grip"],
        "desc": info["description"]
    })

func rotate_car_with_mouse():
    var current_pos = get_viewport().get_mouse_position()
    var delta = current_pos.x - last_mouse_pos.x
    $CarDisplay/CarSpawnPoint.rotate_y(-delta * 0.01)
    last_mouse_pos = current_pos

func _input(event):
    if event is InputEventMouseButton:
        if event.button_index == MOUSE_BUTTON_LEFT:
            is_rotating_car = event.pressed
            if event.pressed:
                last_mouse_pos = get_viewport().get_mouse_position()

# === üçå –ë–∞–Ω–∞–Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ ===
func update_banana_counter():
    $BananaCounter.text = "üçå: %d" % bananas

func add_bananas(amount: int):
    bananas += amount
    update_banana_counter()
    save_game()

# === üõí –ú–∞–≥–∞–∑–∏–Ω ===
func setup_shop():
    $MenuTabs/Shop/CarList.clear()
    for car_name in CAR_DATA.keys():
        var price = CAR_DATA[car_name]["price"]
        var owned = "[–í –≥–∞—Ä–∞–∂–µ]" if car_name in unlocked_cars else "[%düçå]" % price
        $MenuTabs/Shop/CarList.add_item("%s %s" % [car_name.capitalize(), owned])

func _on_CarList_item_selected(index):
    var car_name = CAR_DATA.keys()[index]
    var info = CAR_DATA[car_name]
    $MenuTabs/Shop/ShopCarInfo.text = """
    {name}
    –¶–µ–Ω–∞: {price}üçå
    {desc}
    """.format({
        "name": car_name.capitalize(),
        "price": info["price"],
        "desc": info["description"]
    })
    
    spawn_car(car_name)
    $MenuTabs/Shop/PreviewText.text = "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä: " + car_name.capitalize()

func _on_BuyButton_pressed():
    var selected = $MenuTabs/Shop/CarList.get_selected_items()
    if selected.size() > 0:
        var car_name = CAR_DATA.keys()[selected[0]]
        var price = CAR_DATA[car_name]["price"]
        
        if car_name in unlocked_cars:
            $MenuTabs/Shop/ShopCarInfo.text = "–£–∂–µ –∫—É–ø–ª–µ–Ω–æ!"
        elif bananas >= price:
            bananas -= price
            unlocked_cars.append(car_name)
            update_banana_counter()
            setup_shop()
            $MenuTabs/Shop/ShopCarInfo.text = "–ö—É–ø–ª–µ–Ω–æ!"
            save_game()
        else:
            $MenuTabs/Shop/ShopCarInfo.text = "–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–Ω–∞–Ω–æ–≤!"

# === üìú –ú–∏—Å—Å–∏–∏ ===
func setup_missions():
    var missions = [
        {"name": "–ë–∞–Ω–∞–Ω–æ–≤—ã–π —Å–±–æ—Ä", "reward": 500, "desc": "–°–æ–±–µ—Ä–∏ 50 –±–∞–Ω–∞–Ω–æ–≤ –∑–∞ –ø–æ–µ–∑–¥–∫—É"},
        {"name": "–î—Ä–∏—Ñ—Ç-–º–∞—Å—Ç–µ—Ä", "reward": 800, "desc": "–°–¥–µ–ª–∞–π 3 –ø–æ–ª–Ω—ã—Ö –∑–∞–Ω–æ—Å–∞"},
        {"name": "–ì–æ–Ω–∫–∞ —Å —Ñ–µ—Ä–º–µ—Ä–æ–º", "reward": 1200, "desc": "–û–±–≥–æ–Ω–∏ —Ç—Ä–∞–∫—Ç–æ—Ä"}
    ]
    
    $MenuTabs/Missions/MissionList.clear()
    for mission in missions:
        $MenuTabs/Missions/MissionList.add_item("%s (+%düçå)" % [mission["name"], mission["reward"]])

func _on_MissionList_item_selected(index):
    var missions = [
        {"name": "–ë–∞–Ω–∞–Ω–æ–≤—ã–π —Å–±–æ—Ä", "reward": 500, "desc": "–°–æ–±–µ—Ä–∏ 50 –±–∞–Ω–∞–Ω–æ–≤ –∑–∞ –ø–æ–µ–∑–¥–∫—É"},
        {"name": "–î—Ä–∏—Ñ—Ç-–º–∞—Å—Ç–µ—Ä", "reward": 800, "desc": "–°–¥–µ–ª–∞–π 3 –ø–æ–ª–Ω—ã—Ö –∑–∞–Ω–æ—Å–∞"},
        {"name": "–ì–æ–Ω–∫–∞ —Å —Ñ–µ—Ä–º–µ—Ä–æ–º", "reward": 1200, "desc": "–û–±–≥–æ–Ω–∏ —Ç—Ä–∞–∫—Ç–æ—Ä"}
    ]
    $MenuTabs/Missions/MissionDescription.text = missions[index]["desc"]

# === ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
func _on_VolumeSlider_value_changed(value):
    AudioServer.set_bus_volume_db(AudioServer.get_bus_index("Master"), linear_to_db(value))
    save_game()

func _on_FullscreenCheck_toggled(button_pressed):
    if button_pressed:
        DisplayServer.window_set_mode(DisplayServer.WINDOW_MODE_FULLSCREEN)
    else:
        DisplayServer.window_set_mode(DisplayServer.WINDOW_MODE_WINDOWED)
    save_game()

# === üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ===
func save_game():
    var save_data = {
        "bananas": bananas,
        "unlocked_cars": unlocked_cars,
        "current_car": current_car,
        "volume": $MenuTabs/Settings/VolumeSlider.value,
        "fullscreen": $MenuTabs/Settings/FullscreenCheck.button_pressed
    }
    var file = FileAccess.open("user://savegame.dat", FileAccess.WRITE)
    file.store_string(JSON.stringify(save_data))

func load_game():
    if FileAccess.file_exists("user://savegame.dat"):
        var file = FileAccess.open("user://savegame.dat", FileAccess.READ)
        var data = JSON.parse_string(file.get_as_text())
        bananas = data["bananas"]
        unlocked_cars = data["unlocked_cars"]
        current_car = data["current_car"]
        $MenuTabs/Settings/VolumeSlider.value = data.get("volume", 0.5)
        $MenuTabs/Settings/FullscreenCheck.button_pressed = data.get("fullscreen", false)

# === üé® UI –ê–Ω–∏–º–∞—Ü–∏–∏ ===
func show_ui_animated():
    for element in ui_elements:
        element.modulate.a = 0
        element.visible = true
        create_tween().tween_property(element, "modulate:a", 1.0, 0.5)

func hide_ui_animated():
    var tweens = []
    for element in ui_elements:
        var tween = create_tween()
        tween.tween_property(element, "modulate:a", 0.0, 0.3)
        tweens.append(tween)
    
    await get_tree().create_timer(0.3).timeout
    for element in ui_elements:
        element.visible = false

# === üéÆ –ü–µ—Ä–µ—Ö–æ–¥—ã ===
func _on_StartGame_pressed():
    await hide_ui_animated()
    get_tree().change_scene_to_file("res://game_world.tscn")

func _on_ExitGame_pressed():
    await hide_ui_animated()
    get_tree().quit()
